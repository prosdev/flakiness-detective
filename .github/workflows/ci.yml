name: CI

on:
  pull_request:
    branches: ['*']
  push:
    branches: [main]

jobs:
  test:
    name: Build and Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup PNPM
        uses: pnpm/action-setup@v2
        with:
          version: 8.10.0
          run_install: false

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Install Dependencies
        run: pnpm install --frozen-lockfile

      # Run lint, typecheck, and tests first before building
      - name: Lint
        run: pnpm lint

      - name: TypeCheck
        run: pnpm typecheck

      - name: Test
        run: pnpm test

      # Build packages sequentially to ensure proper declaration generation
      - name: Build Core Package First
        run: |
          echo "Building core package..."
          cd packages/core
          
          # Ensure the dist directory exists
          mkdir -p dist
          
          # Run TypeScript compiler with explicit output of declarations
          echo "Running TypeScript compiler with declaration output..."
          npx tsc --declaration --outDir ./dist
          
          # Check if dist files were created
          echo "Core build completed, checking output..."
          ls -la dist
          
          # Verify declarations were created
          if [ -f "dist/index.d.ts" ]; then
            echo "✅ Core build successful: declarations generated"
          else
            echo "❌ Core build failed: declarations missing"
            exit 1
          fi
          
          cd ../..
        
      - name: Build Adapters Package
        run: |
          echo "Starting adapters build..."
          cd packages/adapters
          
          # Ensure the dist directory exists
          mkdir -p dist
          
          # Run TypeScript compiler with explicit output of declarations
          echo "Running TypeScript compiler with declaration output..."
          npx tsc --declaration --outDir ./dist
          
          # Check if dist files were created
          echo "Adapters build completed, checking output..."
          ls -la dist
          
          # Verify declarations were created
          if [ -f "dist/index.d.ts" ]; then
            echo "✅ Adapters build successful: declarations generated"
          else
            echo "❌ Adapters build failed: declarations missing"
            exit 1
          fi
          
          cd ../..

      - name: Build Visualization Package
        run: |
          echo "Building visualization package..."
          cd packages/visualization && pnpm build
          cd ../..
        
      - name: Build Meta Package
        run: |
          echo "Building meta package..."
          cd packages/meta && pnpm build
          cd ../..
          
      - name: Build Demo Package
        run: |
          echo "Building demo package..."
          cd packages/demo && pnpm build
          cd ../..